-- StarClient ClickGui Library
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

-- Main ClickGui Module
local StarClientGui = {}
StarClientGui.__index = StarClientGui

-- Create new ClickGui instance
function StarClientGui.new()
    local self = setmetatable({}, StarClientGui)
    
    -- ScreenGui Setup
    self.ScreenGui = Instance.new("ScreenGui")
    self.ScreenGui.Name = "StarClientGui"
    self.ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    self.ScreenGui.Enabled = false
    self.ScreenGui.ResetOnSpawn = false
    
    -- Main Frame (Dark Gray with Rounded Corners)
    self.MainFrame = Instance.new("Frame")
    self.MainFrame.Size = UDim2.new(0, 600, 0, 400)
    self.MainFrame.Position = UDim2.new(0.5, -300, 0.5, -200)
    self.MainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    self.MainFrame.BorderSizePixel = 0
    self.MainFrame.ClipsDescendants = true
    self.MainFrame.Parent = self.ScreenGui
    
    local MainCorner = Instance.new("UICorner")
    MainCorner.CornerRadius = UDim.new(0, 8)
    MainCorner.Parent = self.MainFrame
    
    -- Sidebar (Darker Rectangle, Rounded Left Corners Only)
    self.Sidebar = Instance.new("Frame")
    self.Sidebar.Size = UDim2.new(0, 150, 1, 0)
    self.Sidebar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    self.Sidebar.BorderSizePixel = 0
    self.Sidebar.Parent = self.MainFrame
    
    local SidebarCorner = Instance.new("UICorner")
    SidebarCorner.CornerRadius = UDim.new(0, 8)
    SidebarCorner.Parent = self.Sidebar
    
    -- Apply left-only rounded corners by masking right side
    local SidebarMask = Instance.new("Frame")
    SidebarMask.Size = UDim2.new(0, 5, 1, 0)
    SidebarMask.Position = UDim2.new(1, -5, 0, 0)
    SidebarMask.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    SidebarMask.BorderSizePixel = 0
    SidebarMask.Parent = self.Sidebar
    
    -- Title (StarClient)
    self.Title = Instance.new("TextLabel")
    self.Title.Size = UDim2.new(1, 0, 0, 30)
    self.Title.BackgroundTransparency = 1
    self.Title.Text = "StarClient"
    self.Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    self.Title.TextSize = 32
    self.Title.Font = Enum.Font.SourceSansBold
    self.Title.Parent = self.Sidebar
    
    -- Dragging Functionality
    local dragging, dragStart, startPos
    self.Title.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = self.MainFrame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            self.MainFrame.Position = UDim2.new(
                startPos.X.Scale,
                startPos.X.Offset + delta.X,
                startPos.Y.Scale,
                startPos.Y.Offset + delta.Y
            )
        end
    end)
    
    -- Tabs
    self.Tabs = {}
    self.TabButtons = {}
    self.CurrentTab = nil
    
    local tabNames = {"Combat", "Movement", "Visuals", "Exploits", "Utils"}
    for i, tabName in ipairs(tabNames) do
        local TabButton = Instance.new("TextButton")
        TabButton.Size = UDim2.new(1, 0, 0, 30)
        TabButton.Position = UDim2.new(0, 0, 0, 30 + (i - 1) * 35)
        TabButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        TabButton.Text = tabName
        TabButton.TextColor3 = Color3.fromRGB(200, 200, 200)
        TabButton.TextSize = 14
        TabButton.Font = Enum.Font.SourceSans
        TabButton.BorderSizePixel = 1
        TabButton.BorderColor3 = Color3.fromRGB(50, 50, 50)
        TabButton.Parent = self.Sidebar
        
        local TabFrame = Instance.new("ScrollingFrame")
        TabFrame.Size = UDim2.new(1, -150, 1, 0)
        TabFrame.Position = UDim2.new(0, 150, 0, 0)
        TabFrame.BackgroundTransparency = 1
        TabFrame.BorderSizePixel = 0
        TabFrame.ScrollBarThickness = 4
        TabFrame.ScrollBarImageColor3 = Color3.fromRGB(255, 255, 255)
        TabFrame.Visible = false
        TabFrame.Parent = self.MainFrame
        
        local UIListLayout = Instance.new("UIListLayout")
        UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        UIListLayout.Padding = UDim.new(0, 5)
        UIListLayout.Parent = TabFrame
        
        local TopPadding = Instance.new("UIListLayout")
        TopPadding.Padding = UDim.new(0, 10)
        TopPadding.Parent = TabFrame
        
        self.Tabs[tabName] = TabFrame
        self.TabButtons[tabName] = TabButton
        
        TabButton.MouseButton1Click:Connect(function()
            if self.CurrentTab ~= tabName then
                if self.CurrentTab then
                    self.Tabs[self.CurrentTab].Visible = false
                    self.TabButtons[self.CurrentTab].BackgroundColor3 = Color3.fromRGB(30, 30, 30)
                end
                self.CurrentTab = tabName
                TabFrame.Visible = true
                local tween = TweenService:Create(
                    TabButton,
                    TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                    {BackgroundColor3 = Color3.fromRGB(50, 50, 50)}
                )
                tween:Play()
            end
        end)
    end
    
    UserInputService.InputBegan:Connect(function(input)
        if input.KeyCode == Enum.KeyCode.Insert then
            self.ScreenGui.Enabled = not self.ScreenGui.Enabled
        end
    end)
    
    return self
end

function StarClientGui:AddFunction(tabName, funcName, callback)
    local TabFrame = self.Tabs[tabName]
    if not TabFrame then return end
    
    local FuncFrame = Instance.new("Frame")
    FuncFrame.Size = UDim2.new(1, -10, 0, 50)
    FuncFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    FuncFrame.BorderSizePixel = 1
    FuncFrame.BorderColor3 = Color3.fromRGB(50, 50, 50)
    FuncFrame.Parent = TabFrame
    
    local FuncCorner = Instance.new("UICorner")
    FuncCorner.CornerRadius = UDim.new(0, 4)
    FuncCorner.Parent = FuncFrame
    
    local FuncName = Instance.new("TextLabel")
    FuncName.Size = UDim2.new(0.7, 0, 0, 20)
    FuncName.Position = UDim2.new(0, 10, 0, 5)
    FuncName.BackgroundTransparency = 1
    FuncName.Text = funcName
    FuncName.TextColor3 = Color3.fromRGB(255, 255, 255)
    FuncName.TextSize = 14
    FuncName.Font = Enum.Font.SourceSans
    FuncName.TextXAlignment = Enum.TextXAlignment.Left
    FuncName.Parent = FuncFrame
    
    local Toggle = Instance.new("TextButton")
    Toggle.Size = UDim2.new(0, 20, 0, 20)
    Toggle.Position = UDim2.new(1, -30, 0, 5)
    Toggle.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    Toggle.Text = ""
    Toggle.Parent = FuncFrame
    
    local ToggleCorner = Instance.new("UICorner")
    ToggleCorner.CornerRadius = UDim.new(0, 4)
    ToggleCorner.Parent = Toggle
    
    local enabled = false
    Toggle.MouseButton1Click:Connect(function()
        enabled = not enabled
        Toggle.BackgroundColor3 = enabled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(100, 100, 100)
        if callback then
            callback(enabled)
        end
    end)
    
    TabFrame.CanvasSize = UDim2.new(0, 0, 0, TabFrame.UIListLayout.AbsoluteContentSize.Y + 10)
end

function StarClientGui:AddSubFunction(tabName, funcName, subFuncName, callback)
    local TabFrame = self.Tabs[tabName]
    if not TabFrame then return end
    
    local FuncFrame = Instance.new("Frame")
    FuncFrame.Size = UDim2.new(1, -10, 0, 30)
    FuncFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    FuncFrame.BorderSizePixel = 1
    FuncFrame.BorderColor3 = Color3.fromRGB(50, 50, 50)
    FuncFrame.Parent = TabFrame
    
    local FuncCorner = Instance.new("UICorner")
    FuncCorner.CornerRadius = UDim.new(0, 4)
    FuncCorner.Parent = FuncFrame
    
    local FuncName = Instance.new("TextLabel")
    FuncName.Size = UDim2.new(0.7, 0, 0, 20)
    FuncName.Position = UDim2.new(0, 10, 0, 5)
    FuncName.BackgroundTransparency = 1
    FuncName.Text = subFuncName
    FuncName.TextColor3 = Color3.fromRGB(255, 255, 255)
    FuncName.TextSize = 14
    FuncName.Font = Enum.Font.SourceSans
    FuncName.TextXAlignment = Enum.TextXAlignment.Left
    FuncName.Parent = FuncFrame
    
    local Toggle = Instance.new("TextButton")
    Toggle.Size = UDim2.new(0, 20, 0, 20)
    Toggle.Position = UDim2.new(1, -30, 0, 5)
    Toggle.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    Toggle.Text = ""
    Toggle.Parent = FuncFrame
    
    local ToggleCorner = Instance.new("UICorner")
    ToggleCorner.CornerRadius = UDim.new(0, 4)
    ToggleCorner.Parent = Toggle
    
    local enabled = false
    Toggle.MouseButton1Click:Connect(function()
        enabled = not enabled
        Toggle.BackgroundColor3 = enabled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(100, 100, 100)
        if callback then
            callback(enabled)
        end
    end)
    
    TabFrame.CanvasSize = UDim2.new(0, 0, 0, TabFrame.UIListLayout.AbsoluteContentSize.Y + 10)
end

function StarClientGui:AddMultiOption(tabName, funcName, options, callback)
    local TabFrame = self.Tabs[tabName]
    if not TabFrame then return end
    
    local MultiFrame = Instance.new("Frame")
    MultiFrame.Size = UDim2.new(1, -10, 0, 50)
    MultiFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    MultiFrame.BorderSizePixel = 1
    MultiFrame.BorderColor3 = Color3.fromRGB(50, 50, 50)
    MultiFrame.Parent = TabFrame
    
    local MultiCorner = Instance.new("UICorner")
    MultiCorner.CornerRadius = UDim.new(0, 4)
    MultiCorner.Parent = MultiFrame
    
    local MultiName = Instance.new("TextLabel")
    MultiName.Size = UDim2.new(1, -20, 0, 20)
    MultiName.Position = UDim2.new(0, 10, 0, 5)
    MultiName.BackgroundTransparency = 1
    MultiName.Text = funcName
    MultiName.TextColor3 = Color3.fromRGB(255, 255, 255)
    MultiName.TextSize = 14
    MultiName.Font = Enum.Font.SourceSans
    MultiName.TextXAlignment = Enum.TextXAlignment.Left
    MultiName.Parent = MultiFrame
    
    local OptionsContainer = Instance.new("Frame")
    OptionsContainer.Size = UDim2.new(1, -20, 0, 20)
    OptionsContainer.Position = UDim2.new(0, 10, 0, 25)
    OptionsContainer.BackgroundTransparency = 1
    OptionsContainer.Parent = MultiFrame
    
    local UIGridLayout = Instance.new("UIGridLayout")
    UIGridLayout.CellSize = UDim2.new(0, 80, 0, 20)
    UIGridLayout.CellPadding = UDim2.new(0, 5, 0, 5)
    UIGridLayout.Parent = OptionsContainer
    
    for _, option in ipairs(options) do
        local OptionButton = Instance.new("TextButton")
        OptionButton.Size = UDim2.new(0, 80, 0, 20)
        OptionButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
        OptionButton.Text = option
        OptionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        OptionButton.TextSize = 12
        OptionButton.Font = Enum.Font.SourceSans
        OptionButton.Parent = OptionsContainer
        
        local OptionCorner = Instance.new("UICorner")
        OptionCorner.CornerRadius = UDim.new(0, 4)
        OptionCorner.Parent = OptionButton
        
        OptionButton.MouseButton1Click:Connect(function()
            OptionButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
            for _, otherButton in ipairs(OptionsContainer:GetChildren()) do
                if otherButton:IsA("TextButton") and otherButton ~= OptionButton then
                    otherButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
                end
            end
            if callback then
                callback(option)
            end
        end)
    end
    
    TabFrame.CanvasSize = UDim2.new(0, 0, 0, TabFrame.UIListLayout.AbsoluteContentSize.Y + 10)
end

function StarClientGui:AddSlider(tabName, funcName, min, max, default, callback)
    local TabFrame = self.Tabs[tabName]
    if not TabFrame then return end
    
    local SliderFrame = Instance.new("Frame")
    SliderFrame.Size = UDim2.new(1, -10, 0, 50)
    SliderFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    SliderFrame.BorderSizePixel = 1
    SliderFrame.BorderColor3 = Color3.fromRGB(50, 50, 50)
    SliderFrame.Parent = TabFrame
    
    local SliderCorner = Instance.new("UICorner")
    SliderCorner.CornerRadius = UDim.new(0, 4)
    SliderCorner.Parent = SliderFrame
    
    local SliderName = Instance.new("TextLabel")
    SliderName.Size = UDim2.new(0.7, 0, 0, 20)
    SliderName.Position = UDim2.new(0, 10, 0, 5)
    SliderName.BackgroundTransparency = 1
    SliderName.Text = funcName
    SliderName.TextColor3 = Color3.fromRGB(255, 255, 255)
    SliderName.TextSize = 14
    SliderName.Font = Enum.Font.SourceSans
    SliderName.TextXAlignment = Enum.TextXAlignment.Left
    SliderName.Parent = SliderFrame
    
    local ValueLabel = Instance.new("TextLabel")
    ValueLabel.Size = UDim2.new(0.3, 0, 0, 20)
    ValueLabel.Position = UDim2.new(0.7, 0, 0, 5)
    ValueLabel.BackgroundTransparency = 1
    ValueLabel.Text = tostring(default)
    ValueLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    ValueLabel.TextSize = 14
    ValueLabel.Font = Enum.Font.SourceSans
    ValueLabel.TextXAlignment = Enum.TextXAlignment.Right
    ValueLabel.Parent = SliderFrame
    
    local SliderBar = Instance.new("Frame")
    SliderBar.Size = UDim2.new(1, -20, 0, 10)
    SliderBar.Position = UDim2.new(0, 10, 0, 30)
    SliderBar.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    SliderBar.Parent = SliderFrame
    
    local SliderBarCorner = Instance.new("UICorner")
    SliderBarCorner.CornerRadius = UDim.new(0, 4)
    SliderBarCorner.Parent = SliderBar
    
    local Fill = Instance.new("Frame")
    Fill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)
    Fill.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Fill.BorderSizePixel = 0
    Fill.Parent = SliderBar
    
    local FillCorner = Instance.new("UICorner")
    FillCorner.CornerRadius = UDim.new(0, 4)
    FillCorner.Parent = Fill
    
    local Knob = Instance.new("Frame")
    Knob.Size = UDim2.new(0, 14, 0, 14)
    Knob.Position = UDim2.new((default - min) / (max - min), -7, 0, -2)
    Knob.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Knob.Parent = SliderBar
    
    local KnobCorner = Instance.new("UICorner")
    KnobCorner.CornerRadius = UDim.new(0, 7)
    KnobCorner.Parent = Knob
    
    local dragging = false
    Knob.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local mouseX = input.Position.X
            local barX = SliderBar.AbsolutePosition.X
            local barWidth = SliderBar.AbsoluteSize.X
            local ratio = math.clamp((mouseX - barX) / barWidth, 0, 1)
            local value = min + ratio * (max - min)
            value = math.round(value * 10) / 10
            Fill.Size = UDim2.new(ratio, 0, 1, 0)
            Knob.Position = UDim2.new(ratio, -7, 0, -2)
            ValueLabel.Text = tostring(value)
            if callback then
                callback(value)
            end
        end
    end)
    
    TabFrame.CanvasSize = UDim2.new(0, 0, 0, TabFrame.UIListLayout.AbsoluteContentSize.Y + 10)
end

function StarClientGui:AddDropdown(tabName, funcName, options, callback)
    local TabFrame = self.Tabs[tabName]
    if not TabFrame then return end
    
    local DropdownFrame = Instance.new("Frame")
    DropdownFrame.Size = UDim2.new(1, -10, 0, 30)
    DropdownFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    DropdownFrame.BorderSizePixel = 1
    DropdownFrame.BorderColor3 = Color3.fromRGB(50, 50, 50)
    DropdownFrame.Parent = TabFrame
    
    local DropdownCorner = Instance.new("UICorner")
    DropdownCorner.CornerRadius = UDim.new(0, 4)
    DropdownCorner.Parent = DropdownFrame
    
    local DropdownName = Instance.new("TextLabel")
    DropdownName.Size = UDim2.new(1, -20, 0, 20)
    DropdownName.Position = UDim2.new(0, 10, 0, 5)
    DropdownName.BackgroundTransparency = 1
    DropdownName.Text = funcName
    DropdownName.TextColor3 = Color3.fromRGB(255, 255, 255)
    DropdownName.TextSize = 14
    DropdownName.Font = Enum.Font.SourceSans
    DropdownName.TextXAlignment = Enum.TextXAlignment.Left
    DropdownName.Parent = DropdownFrame
    
    local ListFrame = Instance.new("Frame")
    ListFrame.Size = UDim2.new(1, -10, 0, 0)
    ListFrame.Position = UDim2.new(0, 5, 0, 30)
    ListFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    ListFrame.BorderSizePixel = 1
    ListFrame.BorderColor3 = Color3.fromRGB(50, 50, 50)
    ListFrame.ClipsDescendants = true
    ListFrame.Visible = false
    ListFrame.Parent = DropdownFrame
    
    local ListCorner = Instance.new("UICorner")
    ListCorner.CornerRadius = UDim.new(0, 4)
    ListCorner.Parent = ListFrame
    
    local UIListLayout = Instance.new("UIListLayout")
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIListLayout.Parent = ListFrame
    
    local Arrow = Instance.new("TextButton")
    Arrow.Size = UDim2.new(0, 20, 0, 20)
    Arrow.Position = UDim2.new(1, -30, 0, 5)
    Arrow.BackgroundTransparency = 1
    Arrow.Text = "↓"
    Arrow.TextColor3 = Color3.fromRGB(255, 255, 255)
    Arrow.TextSize = 14
    Arrow.Parent = DropdownFrame
    
    local expanded = false
    Arrow.MouseButton1Click:Connect(function()
        expanded = not expanded
        ListFrame.Visible = expanded
        Arrow.Text = expanded and "↑" or "↓"
        ListFrame.Size = expanded and UDim2.new(1, -10, 0, #options * 25) or UDim2.new(1, -10, 0, 0)
        DropdownFrame.Size = expanded and UDim2.new(1, -10, 0, 30 + #options * 25) or UDim2.new(1, -10, 0, 30)
        TabFrame.CanvasSize = UDim2.new(0, 0, 0, TabFrame.UIListLayout.AbsoluteContentSize.Y + 10)
    end)
    
    for _, option in ipairs(options) do
        local OptionButton = Instance.new("TextButton")
        OptionButton.Size = UDim2.new(1, 0, 0, 25)
        OptionButton.BackgroundTransparency = 1
        OptionButton.Text = option
        OptionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        OptionButton.TextSize = 14
        OptionButton.Font = Enum.Font.SourceSans
        OptionButton.Parent = ListFrame
        
        OptionButton.MouseButton1Click:Connect(function()
            DropdownName.Text = funcName .. ": " .. option
            expanded = false
            ListFrame.Visible = false
            Arrow.Text = "↓"
            ListFrame.Size = UDim2.new(1, -10, 0, 0)
            DropdownFrame.Size = UDim2.new(1, -10, 0, 30)
            TabFrame.CanvasSize = UDim2.new(0, 0, 0, TabFrame.UIListLayout.AbsoluteContentSize.Y + 10)
            if callback then
                callback(option)
            end
        end)
    end
    
    TabFrame.CanvasSize = UDim2.new(0, 0, 0, TabFrame.UIListLayout.AbsoluteContentSize.Y + 10)
end

function StarClientGui:AddColorPicker(tabName, funcName, defaultColor, callback)
    local TabFrame = self.Tabs[tabName]
    if not TabFrame then return end
    
    local ColorFrame = Instance.new("Frame")
    ColorFrame.Size = UDim2.new(1, -10, 0, 30)
    ColorFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    ColorFrame.BorderSizePixel = 1
    ColorFrame.BorderColor3 = Color3.fromRGB(50, 50, 50)
    ColorFrame.Parent = TabFrame
    
    local ColorCorner = Instance.new("UICorner")
    ColorCorner.CornerRadius = UDim.new(0, 4)
    ColorCorner.Parent = ColorFrame
    
    local ColorName = Instance.new("TextLabel")
    ColorName.Size = UDim2.new(0.7, 0, 0, 20)
    ColorName.Position = UDim2.new(0, 10, 0, 5)
    ColorName.BackgroundTransparency = 1
    ColorName.Text = funcName
    ColorName.TextColor3 = Color3.fromRGB(255, 255, 255)
    ColorName.TextSize = 14
    ColorName.Font = Enum.Font.SourceSans
    ColorName.TextXAlignment = Enum.TextXAlignment.Left
    ColorName.Parent = ColorFrame
    
    local ColorPreview = Instance.new("Frame")
    ColorPreview.Size = UDim2.new(0, 20, 0, 20)
    ColorPreview.Position = UDim2.new(1, -30, 0, 5)
    ColorPreview.BackgroundColor3 = defaultColor
    ColorPreview.BorderSizePixel = 1
    ColorPreview.BorderColor3 = Color3.fromRGB(50, 50, 50)
    ColorPreview.Parent = ColorFrame
    
    local ColorPreviewCorner = Instance.new("UICorner")
    ColorPreviewCorner.CornerRadius = UDim.new(0, 4)
    ColorPreviewCorner.Parent = ColorPreview
    
    local PickerFrame = Instance.new("Frame")
    PickerFrame.Size = UDim2.new(0, 150, 0, 150)
    PickerFrame.Position = UDim2.new(1, -160, 0, 30)
    PickerFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    PickerFrame.BorderSizePixel = 1
    PickerFrame.BorderColor3 = Color3.fromRGB(50, 50, 50)
    PickerFrame.Visible = false
    PickerFrame.Parent = ColorFrame
    
    local PickerCorner = Instance.new("UICorner")
    PickerCorner.CornerRadius = UDim.new(0, 4)
    PickerCorner.Parent = PickerFrame
    
    local Gradient = Instance.new("ImageLabel")
    Gradient.Size = UDim2.new(1, -10, 1, -30)
    Gradient.Position = UDim2.new(0, 5, 0, 5)
    Gradient.BackgroundTransparency = 1
    Gradient.Image = "rbxassetid://2594291613"
    Gradient.Parent = PickerFrame
    
    local HueBar = Instance.new("Frame")
    HueBar.Size = UDim2.new(1, -10, 0, 20)
    HueBar.Position = UDim2.new(0, 5, 1, -25)
    HueBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    HueBar.Parent = PickerFrame
    
    local HueGradient = Instance.new("UIGradient")
    HueGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 0)),
        ColorSequenceKeypoint.new(0.17, Color3.fromRGB(255, 255, 0)),
        ColorSequenceKeypoint.new(0.33, Color3.fromRGB(0, 255, 0)),
        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(0, 255, 255)),
        ColorSequenceKeypoint.new(0.67, Color3.fromRGB(0, 0, 255)),
        ColorSequenceKeypoint.new(0.83, Color3.fromRGB(255, 0, 255)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 0, 0))
    })
    HueGradient.Parent = HueBar
    
    local expanded = false
    ColorPreview.MouseButton1Click:Connect(function()
        expanded = not expanded
        PickerFrame.Visible = expanded
        ColorFrame.Size = expanded and UDim2.new(1, -10, 0, 180) or UDim2.new(1, -10, 0, 30)
        TabFrame.CanvasSize = UDim2.new(0, 0, 0, TabFrame.UIListLayout.AbsoluteContentSize.Y + 10)
    end)
    
    local hsv = {H = 0, S = 0, V = 1}
    Gradient.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 and expanded then
            local mouse = UserInputService:GetMouseLocation()
            local x = math.clamp(mouse.X - Gradient.AbsolutePosition.X, 0, Gradient.AbsoluteSize.X)
            local y = math.clamp(mouse.Y - Gradient.AbsolutePosition.Y, 0, Gradient.AbsoluteSize.Y)
            hsv.S = x / Gradient.AbsoluteSize.X
            hsv.V = 1 - (y / Gradient.AbsoluteSize.Y)
            local hueX = math.clamp(mouse.X - HueBar.AbsolutePosition.X, 0, HueBar.AbsoluteSize.X)
            hsv.H = hueX / HueBar.AbsoluteSize.X * 360
            local color = Color3.fromHSV(hsv.H / 360, hsv.S, hsv.V)
            ColorPreview.BackgroundColor3 = color
            if callback then
                callback(color)
            end
        end
    end)
    
    HueBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 and expanded then
            local mouse = UserInputService:GetMouseLocation()
            local x = math.clamp(mouse.X - HueBar.AbsolutePosition.X, 0, HueBar.AbsoluteSize.X)
            hsv.H = x / HueBar.AbsoluteSize.X * 360
            local color = Color3.fromHSV(hsv.H / 360, hsv.S, hsv.V)
            ColorPreview.BackgroundColor3 = color
            if callback then
                callback(color)
            end
        end
    end)
    
    TabFrame.CanvasSize = UDim2.new(0, 0, 0, TabFrame.UIListLayout.AbsoluteContentSize.Y + 10)
end

function StarClientGui:Destroy()
    self.ScreenGui:Destroy()
end

return StarClientGui
