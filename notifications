-- StarClient Notifications Library
local TweenService = game:GetService("TweenService")

local Notifications = {}
Notifications.__index = Notifications

function Notifications.new(screenGui)
    local self = setmetatable({}, Notifications)
    self.ScreenGui = screenGui or Instance.new("ScreenGui")
    self.ScreenGui.Name = "StarClientNotifications"
    self.ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    self.ScreenGui.ResetOnSpawn = false
    self.Notifications = {}
    return self
end

function Notifications:ShowNotification(text, state)
    local NotificationFrame = Instance.new("Frame")
    NotificationFrame.Size = UDim2.new(0, 200, 0, 50)
    NotificationFrame.Position = UDim2.new(1, -210, 1, -60 - (#self.Notifications * 60))
    NotificationFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    NotificationFrame.BorderSizePixel = 0
    NotificationFrame.Parent = self.ScreenGui

    local Corner = Instance.new("UICorner")
    Corner.CornerRadius = UDim.new(0, 4)
    Corner.Parent = NotificationFrame

    local Title = Instance.new("TextLabel")
    Title.Size = UDim2.new(1, -10, 0, 20)
    Title.Position = UDim2.new(0, 5, 0, 5)
    Title.BackgroundTransparency = 1
    Title.Text = text
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.TextSize = 14
    Title.Font = Enum.Font.SourceSans
    Title.TextXAlignment = Enum.TextXAlignment.Left
    Title.Parent = NotificationFrame

    local Status = Instance.new("TextLabel")
    Status.Size = UDim2.new(0, 60, 0, 20)
    Status.Position = UDim2.new(1, -65, 0, 25)
    Status.BackgroundTransparency = 1
    Status.Text = state and "Enabled" or "Disabled"
    Status.TextColor3 = state and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
    Status.TextSize = 12
    Status.Font = Enum.Font.SourceSans
    Status.TextXAlignment = Enum.TextXAlignment.Right
    Status.Parent = NotificationFrame

    table.insert(self.Notifications, NotificationFrame)

    local tweenIn = TweenService:Create(
        NotificationFrame,
        TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
        {Position = UDim2.new(1, -210, 1, -60 - (#self.Notifications * 60))}
    )
    tweenIn:Play()

    spawn(function()
        wait(3)
        local tweenOut = TweenService:Create(
            NotificationFrame,
            TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.In),
            {Position = UDim2.new(1, 0, 1, -60 - (#self.Notifications * 60))}
        )
        tweenOut:Play()
        tweenOut.Completed:Wait()
        NotificationFrame:Destroy()
        table.remove(self.Notifications, table.find(self.Notifications, NotificationFrame))
        
        for i, frame in ipairs(self.Notifications) do
            local tween = TweenService:Create(
                frame,
                TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {Position = UDim2.new(1, -210, 1, -60 - (i * 60))}
            )
            tween:Play()
        end
    end)
end

function Notifications:Destroy()
    self.ScreenGui:Destroy()
end

return Notifications
